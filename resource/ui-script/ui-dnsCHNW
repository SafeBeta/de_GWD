#!/bin/bash
cat << EOF >/tmp/v2dns_config
{
"dns":{
  "hosts":{"localhost":"127.0.0.1"},
  "servers":[
  {"address":"127.0.0.1","port":5390},
  {"address":"127.0.0.1","port":5390,"domains":["domain:google.com"]},
  {"address":"127.0.0.1","port":5310,"domains":["geosite:cn","geosite:tld-cn"],"expectIPs":["geoip:cn"]},
  {"address":"127.0.0.1","port":5310,"domains":["domain:baidu.com"]}
  ]
},
"inbounds":[
  {
    "tag":"dnsin",
    "port":5350,
    "listen":"127.0.0.1",
    "protocol":"dokodemo-door",
    "settings":{"network":"tcp,udp","address":"0.0.0.0","port":53}
  }
],
"outbounds":[
  {
    "tag":"dnsout",
    "protocol":"dns",
    "settings":{},
    "streamSettings":{"sockopt":{"mark":255}}
  }
],
"routing":{
  "domainStrategy":"AsIs",
  "rules":[
    {"outboundTag":"dnsout","type":"field","inboundTag":["dnsin"]}
  ]
}
}
EOF



doh1=$(jq -r '.dns.doh1' /opt/de_GWD/0conf)
doh2=$(jq -r '.dns.doh2' /opt/de_GWD/0conf)

doh1Domain=$(echo $doh1 | cut -d/ -f1 | cut -d: -f1)
doh2Domain=$(echo $doh2 | cut -d/ -f1 | cut -d: -f1)
doh1IP=$(dig @127.0.0.1 $doh1Domain -p 5310 +short | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')
doh2IP=$(dig @127.0.0.1 $doh2Domain -p 5310 +short | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')

doh_upstream1="server-https https://$doh1 -host-name $doh1Domain"
doh_upstream2="server-https https://$doh2 -host-name $doh2Domain"
doh_upstream1host="address /$doh1Domain/$doh1IP"
doh_upstream2host="address /$doh2Domain/$doh2IP"

sed -i "$(sed -ne '/server-https/=' /etc/smartdns/doh.conf | awk NR==1)s?.*?$doh_upstream1?" /etc/smartdns/doh.conf
sed -i "$(sed -ne '/server-https/=' /etc/smartdns/doh.conf | awk NR==2)s?.*?$doh_upstream2?" /etc/smartdns/doh.conf
sed -i "$(sed -ne '/address /=' /etc/smartdns/doh.conf | awk NR==1)s?.*?$doh_upstream1host?" /etc/smartdns/doh.conf
sed -i "$(sed -ne '/address /=' /etc/smartdns/doh.conf | awk NR==2)s?.*?$doh_upstream2host?" /etc/smartdns/doh.conf

echo $doh1IP >/tmp/IPdoh
echo $doh2IP >>/tmp/IPdoh
sort /tmp/IPdoh | uniq | sed '/^\s*$/d' >/opt/de_GWD/IPdoh

cat /dev/null >/opt/de_GWD/IPv2node
jq -r '.v2node[].domain' /opt/de_GWD/0conf | cut -d: -f1 >/tmp/v2node_temp2
sort /tmp/v2node_temp2 | uniq | sed '/^\s*$/d' >/tmp/v2node_temp
cat /tmp/v2node_temp | while read line 
do
key=$line
value=$(dig @127.0.0.1 $line -p 5390 +short | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')
echo $value >>/opt/de_GWD/IPv2node
jq --arg key "$key" --arg value "$value" '.dns.hosts += {($key): ($value)}' /tmp/v2dns_config | sponge /tmp/v2dns_config
done

jq 'del(.dns.hosts[] | select(. == ""))' /tmp/v2dns_config | sponge /tmp/v2dns_config

if [[ -n $(jq -r '.dns.hosts' /opt/de_GWD/0conf) ]] && [[ $(jq -r '.dns.hosts' /opt/de_GWD/0conf) != "null" ]]; then
jq -r '.dns.hosts | to_entries[] | [.key, .value] | @tsv' /opt/de_GWD/0conf >/tmp/hosts
cat /tmp/hosts | while read line 
do
key=$(echo $line | awk '{print$1}')
value=$(echo $line | awk '{print$2}')
jq --arg key "$key" --arg value "$value" '.dns.hosts += {($key): ($value)}' /tmp/v2dns_config | sponge /tmp/v2dns_config
done
fi

jq '.dns.DNSsplit="chnw"' /opt/de_GWD/0conf | sponge /opt/de_GWD/0conf

if [[ -n $(cat /tmp/v2dns_config) ]]; then
  mv -f /tmp/v2dns_config /opt/de_GWD/v2dns/config.json
fi

rm -rf /tmp/v2dns*
rm -rf /tmp/v2node*
rm -rf /tmp/IPdoh*
rm -rf /tmp/hosts
rm -rf /tmp/listB
rm -rf /tmp/listW

chmod 666 /opt/de_GWD/v2dns/config.json
chmod 666 /opt/de_GWD/0conf
